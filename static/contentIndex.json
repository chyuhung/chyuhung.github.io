{"index":{"title":"welcome to my digital garden","links":["tags"],"tags":[],"content":"数字花园 是我的一种全新的尝试，既然叫做数字花园，那么我希望它应该向阳而肆意生长，摆脱苦恼与烦闷！\n开始浏览我的数字花园tags\n搭建数字花园（Quartz）官方文档 Welcome to Quartz 4 (jzhao.xyz)\n\n我的数字花园部署结构\n\n私有仓库（quartz-obsidian） ⇒ git actions部署pages ⇒ 公开仓库（chyuhung.github.io）\n\ngit actions 代码\n\nname: Deploy Quartz site to GitHub Pages\n \non:\n  push:\n    branches:\n      - v4\n \npermissions:\n  contents: read\n  pages: write\n  id-token: write\n \nconcurrency:\n  group: &quot;pages&quot;\n  cancel-in-progress: false\n \njobs:\n  build:\n    runs-on: ubuntu-22.04\n    steps:\n      - uses: actions/checkout@v3\n        with:\n          fetch-depth: 0 # Fetch all history for git info\n      - uses: actions/setup-node@v3\n        with:\n          node-version: 18.14\n      - name: Install Dependencies\n        run: npm ci\n      - name: Build Quartz\n        run: npx quartz build\n      - name: Deploy to GitHub Pages\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          deploy_key: ${{ secrets.ID_RSA_HUGO_DEPLOY }}\n          external_repository: chyuhung/chyuhung.github.io\n          publish_branch: main\n          publish_dir: ./public\n          commit_message: ${{ github.event.head_commit.message }}\n\nkey配置\n\n使用ssh-keygen生成一对公钥和密钥，在代码仓库（quartz-obsidian）secrets中添加私钥，在pages仓库（chyuhung.github.io）添加公钥\n\n勿以善小而不为\n\n如有错误欢迎指正！"},"tags":{"title":"tags","links":["基础技能/基础技能","自动化和编程/自动化和编程","云计算和虚拟化/云计算和虚拟化","应用部署和容灾/应用部署和容灾","监控和日志管理/监控和日志管理","安全和权限管理/安全和权限管理","网络和存储管理/网络和存储管理","故障排除和性能优化/故障排除和性能优化","文档和沟通能力/文档和沟通能力"],"tags":[],"content":"\n\n基础技能\n\n操作系统（如 Linux、Unix、Windows）的基本原理和命令行操作\n网络协议和网络基础知识\n编程基础（如 Python、Shell、Perl）\n\n\n\n自动化和编程\n\n自动化工具（如 Ansible、Chef、Puppet）\n脚本编程和编写自动化脚本\n版本控制系统（如 Git、SVN）\n\n\n\n云计算和虚拟化\n\n云计算基础概念和服务模型（如 IaaS、PaaS、SaaS）\n虚拟化技术（如 VMware、KVM、Docker）\n容器编排和管理工具（如 Kubernetes）\n\n\n\n应用部署和容灾\n\nWeb 服务器和应用服务器的部署和配置（如 Nginx、Apache、Tomcat）\n高可用性和容灾技术（如负载均衡、故障转移、备份恢复）\n\n\n\n监控和日志管理\n\n监控系统的搭建和配置（如 Zabbix、Prometheus）\n日志管理和分析工具（如 ELK Stack、Splunk）\n\n\n\n安全和权限管理\n\n系统安全和漏洞管理\n访问控制和权限管理（如 LDAP、RBAC）\n防火墙和网络安全配置\n\n\n\n网络和存储管理\n\n网络设备的配置和管理\n存储管理和数据备份策略\n数据库管理（如 MySQL、PostgreSQL、MongoDB）\n\n\n\n故障排除和性能优化\n\n系统故障排查和调优\n性能监测和性能优化技术\n容量规划和资源管理\n\n\n\n文档和沟通能力\n\n技术文档编写和维护\n团队协作和沟通能力\n问题解决和故障处理技巧\n\n\n"},"云计算和虚拟化/openstack":{"title":"openstack","links":[],"tags":["云计算和虚拟化"],"content":"openstack集群健康检查\nopenstack-status"},"云计算和虚拟化/云计算和虚拟化":{"title":"云计算和虚拟化","links":[],"tags":[],"content":"\n\n云计算和虚拟化\n\n云计算基础概念和服务模型（如 IaaS、PaaS、SaaS）\n虚拟化技术（如 VMware、KVM、Docker）\n容器编排和管理工具（如 Kubernetes）\n\n\n"},"基础技能/go":{"title":"go","links":[],"tags":["基础技能"],"content":""},"基础技能/python":{"title":"python","links":[],"tags":["基础技能"],"content":"初识Python\n版本\n版本号分为三段，形如A.B.C，版本大更新增加A，新功能增加B，小改动增加C\n优缺点\n优点\n\n简单，学习曲线低\n开放源代码，生态强大\n解释型语言移植性强\n支持面向对象和函数式编程\n代码规范可读性强\n\n缺点\n\n执行效率稍微低\n代码无法加密\n\n解释器\n官方的Python解释器是用C语言实现的，也是使用最为广泛的Python解释器，通常称之为CPython\n应用领域\n后端开发、DevOps、爬虫、自动化测试、数据分析、机器学习\n运行\n单行注释以#开头，多行注释以&#039;&#039;&#039;开头和结尾\n# hello world 示例\nprint(&#039;hello, world!&#039;)\n\n开发工具\n安装python 自带集成开发工具IDLE（命令行交互式），实际开发不方便使用"},"基础技能/shell":{"title":"shell","links":[],"tags":["基础技能"],"content":""},"基础技能/vue":{"title":"vue","links":[],"tags":["基础技能"],"content":"安装nodejs\n下载地址 Node.js 中文网 (nodejs.com.cn)\nnodejs安装步骤 Installation · nodejs/help Wiki (github.com)\nlinux安装nodejs参考命令\n[root@ctl01 tmp]# tar -xf node-v18.19.0-linux-x64.tar.xz\n[root@ctl01 tmp]# mv node-v18.19.0-linux-x64 nodejs\n[root@ctl01 tmp]# mv nodejs /usr/local/\n[root@ctl01 tmp]# echo &quot;export PATH=$PATH:/usr/local/nodejs/bin&quot; &gt;&gt; /etc/profile\n[root@ctl01 tmp]# source /etc/profile\n证书过期处理\n# vue创建项目报错\n$ error An unexpected error occurred: &quot;https://registry.npm.taobao.org/@vue%2fcli-plugin-babel: certificate has expired&quot;.\n# 首先更换镜像地址\n$ npm config set registry https://registry.npmmirror.com\n# 调整用户目录下配置\n$ cat .vuerc\n{\n  &quot;useTaobaoRegistry&quot;: false,#如果为true调整为false，如果为false调整为true\n  &quot;packageManager&quot;: &quot;yarn&quot;\n}"},"基础技能/基础技能":{"title":"基础技能","links":[],"tags":[],"content":"\n\n基础技能\n\n操作系统（如 Linux、Unix、Windows）的基本原理和命令行操作\n网络协议和网络基础知识\n编程基础（如 Python、Shell、Perl）\n\n\n"},"安全和权限管理/安全和权限管理":{"title":"安全和权限管理","links":[],"tags":[],"content":"\n\n安全和权限管理\n\n系统安全和漏洞管理\n访问控制和权限管理（如 LDAP、RBAC）\n防火墙和网络安全配置\n\n\n"},"应用部署和容灾/应用部署和容灾":{"title":"应用部署和容灾","links":[],"tags":[],"content":"\n\n应用部署和容灾\n\nWeb 服务器和应用服务器的部署和配置（如 Nginx、Apache、Tomcat）\n高可用性和容灾技术（如负载均衡、故障转移、备份恢复）\n\n\n"},"故障排除和性能优化/故障排除和性能优化":{"title":"故障排除和性能优化","links":[],"tags":[],"content":"\n\n故障排除和性能优化\n\n系统故障排查和调优\n性能监测和性能优化技术\n容量规划和资源管理\n\n\n"},"文档和沟通能力/文档和沟通能力":{"title":"文档和沟通能力","links":[],"tags":[],"content":"\n\n文档和沟通能力\n\n技术文档编写和维护\n团队协作和沟通能力\n问题解决和故障处理技巧\n\n\n"},"监控和日志管理/监控和日志管理":{"title":"监控和日志管理","links":[],"tags":[],"content":"\n\n监控和日志管理\n\n监控系统的搭建和配置（如 Zabbix、Prometheus）\n日志管理和分析工具（如 ELK Stack、Splunk）\n\n\n"},"网络和存储管理/pgsql":{"title":"pgsql","links":[],"tags":["网络和存储管理"],"content":""},"网络和存储管理/网络和存储管理":{"title":"网络和存储管理","links":[],"tags":[],"content":"\n\n网络和存储管理\n\n网络设备的配置和管理\n存储管理和数据备份策略\n数据库管理（如 MySQL、PostgreSQL、MongoDB）\n\n\n"},"自动化和编程/ansible":{"title":"ansible","links":[],"tags":["自动化和编程"],"content":""},"自动化和编程/git":{"title":"git","links":[],"tags":["自动化和编程"],"content":"常规命令\n查看所有分支\ngit ls-remote --heads ssh://git@10.254.180.148:20495/PZCPHPT.ZDHBS/auto_upgrade_script.git\n\n克隆最近一次提交\ngit clone --depth=1 ssh://git@10.254.180.148:20495/PZCPHPT.ZDHBS/auto_upgrade_script.git\n\n配置用户名、邮箱\ngit config --global user.name chyuhung\ngit config --global user.email 977599667@qq.com\n\n硬重置本地，将当前分支重置到远程仓库中 origin 的 dev 分支的最新提交\ngit reset --hard origin/dev\n\n大仓库拉取\n\n常规方式\n\n1、拉取指定分支\ngit clone -b dev ssh://git@xxxx/xxxx/auto_deploy_script.git\n2、指定分支并只拉取最近一次提交\ngit clone -b dev --depth=1 ssh://git@xxxx/xxxx/auto_upgrade_script.git\n\n新建空仓库拉取\n\n1、本地直接新建对应仓库\nmkdir &lt;repo名称&gt;\n2、初始化git仓库（即新建.git/）\ngit init\n3、配置remote origin\ngit remote add origin &lt;repo地址&gt;\n4、新建待拉取对应分支（默认为master）\ngit checkout -b &lt;对应分支名&gt;\n5、拉取特定分支\ngit pull origin &lt;对应分支名&gt;\n分支合并\n1、切换到特定分支并拉取最新代码，完成相关代码修改提交\ngit checkout feature-compmgmt1015\ngit pull\n2、切换到主分支，拉取最新代码\ngit  checkout dev\ngit pull\n3、合并代码到主分支\ngit merge feature-compmgmt1015\n# 解决有合并冲突的文件\n# git restore &lt;非我们改动的文件&gt;\n# git add . &amp;&amp; git commit -m &#039;解决有合并冲突的文件&#039;\ngit push\n4、查看git日志\ngit log\n5、恢复文件\ngit restore --staged .\ngit restore  .\n6、显示指定commit修改内容\ngit show 685b7067992b4ee1230fe38cc1c9dec2beb60e55\ngit status\n分支跟踪\n设置本地dev分支跟踪远程dev分支\n$ git remote -v\norigin  ssh://git@xxxx/xxxx/auto_upgrade_script.git (fetch)\norigin  ssh://git@xxxx/xxxx/auto_upgrade_script.git (push)\n \n$ git checkout dev\nSwitched to branch &#039;dev&#039;\n \n$  git branch --set-upstream-to=origin/dev dev\nbranch &#039;dev&#039; set up to track &#039;origin/dev&#039;."},"自动化和编程/自动化和编程":{"title":"自动化和编程","links":[],"tags":[],"content":"\n\n自动化和编程\n\n自动化工具（如 Ansible、Chef、Puppet）\n脚本编程和编写自动化脚本\n版本控制系统（如 Git、SVN）\n\n\n"}}