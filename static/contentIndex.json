{"git命令":{"title":"git命令","links":[],"tags":[],"content":"常规命令\n查看所有分支\ngit ls-remote --heads ssh://git@10.254.180.148:20495/PZCPHPT.ZDHBS/auto_upgrade_script.git\n\n克隆最近一次提交\ngit clone --depth=1 ssh://git@10.254.180.148:20495/PZCPHPT.ZDHBS/auto_upgrade_script.git\n\n配置用户名、邮箱\ngit config --global user.name chengyh\ngit config --global user.email chengyh@si-tech.com.cn\n\n大仓库拉取\n一、常规方式\n1、拉取指定分支\ngit clone -b dev ssh://git@xxxx/xxxx/auto_deploy_script.git\n2、指定分支并只拉取最近一次提交\ngit clone -b dev --depth=1 ssh://git@xxxx/xxxx/auto_upgrade_script.git\n二、新建空仓库拉取\n1、本地直接新建对应仓库\nmkdir &lt;repo名称&gt;\n2、初始化git仓库（即新建.git/）\ngit init\n3、配置remote origin\ngit remote add origin &lt;repo地址&gt;\n4、新建待拉取对应分支（默认为master）\ngit checkout -b &lt;对应分支名&gt;\n5、拉取特定分支\ngit pull origin &lt;对应分支名&gt;\n分支合并\n1、切换到特定分支并拉取最新代码，完成相关代码修改提交\ngit checkout feature-compmgmt1015\ngit pull\n2、切换到主分支，拉取最新代码\ngit  checkout dev\ngit pull\n3、合并代码到主分支\ngit merge feature-compmgmt1015\n# 解决有合并冲突的文件\n# git restore &lt;非我们改动的文件&gt;\n# git add . &amp;&amp; git commit -m &#039;解决有合并冲突的文件&#039;\ngit push\n4、查看git日志\ngit log\n5、恢复文件\ngit restore --staged .\ngit restore  .\n6、显示指定commit修改内容\ngit show 685b7067992b4ee1230fe38cc1c9dec2beb60e55\ngit status\n分支跟踪\n设置本地dev分支跟踪远程dev分支\n$ git remote -v\norigin  ssh://git@xxxx/xxxx/auto_upgrade_script.git (fetch)\norigin  ssh://git@xxxx/xxxx/auto_upgrade_script.git (push)\n \n$ git checkout dev\nSwitched to branch &#039;dev&#039;\n \n$  git branch --set-upstream-to=origin/dev dev\nbranch &#039;dev&#039; set up to track &#039;origin/dev&#039;."},"index":{"title":"Hi , Welcome! 你好，谢谢！","links":["git命令"],"tags":[],"content":"基础技能\n\n操作系统（如 Linux、Unix、Windows）的基本原理和命令行操作\n网络协议和网络基础知识\n编程基础（如 Python、Shell、Perl）\n\n自动化和编程\n\n\n自动化工具（如 Ansible、Chef、Puppet）\n\n\n脚本编程和编写自动化脚本\n\n\n版本控制系统（如 Git、SVN）\n\n\ngit命令\n\n\n云计算和虚拟化\n\n云计算基础概念和服务模型（如 IaaS、PaaS、SaaS）\n虚拟化技术（如 VMware、KVM、Docker）\n容器编排和管理工具（如 Kubernetes）\n\n应用部署和容灾\n\nWeb 服务器和应用服务器的部署和配置（如 Nginx、Apache、Tomcat）\n高可用性和容灾技术（如负载均衡、故障转移、备份恢复）\n\n监控和日志管理\n\n监控系统的搭建和配置（如 Zabbix、Prometheus）\n日志管理和分析工具（如 ELK Stack、Splunk）\n\n安全和权限管理\n\n系统安全和漏洞管理\n访问控制和权限管理（如 LDAP、RBAC）\n防火墙和网络安全配置\n\n网络和存储管理\n\n网络设备的配置和管理\n存储管理和数据备份策略\n数据库管理（如 MySQL、PostgreSQL、MongoDB）\n\n故障排除和性能优化\n\n系统故障排查和调优\n性能监测和性能优化技术\n容量规划和资源管理\n\n文档和沟通能力\n\n技术文档编写和维护\n团队协作和沟通能力\n问题解决和故障处理技巧\n"}}