<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
      <title>🪴 十二万光年</title>
      <link>https://chyuhung.github.io</link>
      <description>最近的10条笔记 on 🪴 十二万光年</description>
      <generator>Quartz -- quartz.jzhao.xyz</generator>
      <item>
    <title>go</title>
    <link>https://chyuhung.github.io/%E5%9F%BA%E7%A1%80%E6%8A%80%E8%83%BD/go</link>
    <guid>https://chyuhung.github.io/%E5%9F%BA%E7%A1%80%E6%8A%80%E8%83%BD/go</guid>
    <description>跨平台代码 典型“动态语言思维”的错误 if runtime.GOOS == &quot;windows&quot; { return nil } .</description>
    <pubDate>Mon, 27 May 2024 09:17:20 GMT</pubDate>
  </item><item>
    <title>python</title>
    <link>https://chyuhung.github.io/%E5%9F%BA%E7%A1%80%E6%8A%80%E8%83%BD/python</link>
    <guid>https://chyuhung.github.io/%E5%9F%BA%E7%A1%80%E6%8A%80%E8%83%BD/python</guid>
    <description>初识Python 版本 版本号分为三段，形如A.B.C，版本大更新增加A，新功能增加B，小改动增加C 优缺点 优点 简单，学习曲线低 开放源代码，生态强大 解释型语言移植性强 支持面向对象和函数式编程 代码规范可读性强 缺点 执行效率稍微低 代码无法加密 解释器 官方的Python解释器是用C语言实现的，也是使用最为广泛的Python解释器，通常称之为CPython 应用领域 后端开发、DevOps、爬虫、自动化测试、数据分析、机器学习 运行 单行注释以#开头，多行注释以&#039;&#039;&#039;开头和结尾 # hello world 示例 print(&#039;hello, world!&#039;) 开发工具 安装python 自带集成开发工具IDLE（命令行交互式），实际开发不方便使用，通常使用pycharm或者vscode 语言元素 以python3进行总结 整型 int 0b100 0x100 0o100 浮点型 123.</description>
    <pubDate>Mon, 27 May 2024 09:17:20 GMT</pubDate>
  </item><item>
    <title>shell</title>
    <link>https://chyuhung.github.io/%E5%9F%BA%E7%A1%80%E6%8A%80%E8%83%BD/shell</link>
    <guid>https://chyuhung.github.io/%E5%9F%BA%E7%A1%80%E6%8A%80%E8%83%BD/shell</guid>
    <description></description>
    <pubDate>Mon, 27 May 2024 09:17:20 GMT</pubDate>
  </item><item>
    <title>shell下载命令</title>
    <link>https://chyuhung.github.io/%E5%9F%BA%E7%A1%80%E6%8A%80%E8%83%BD/shell%E4%B8%8B%E8%BD%BD%E5%91%BD%E4%BB%A4</link>
    <guid>https://chyuhung.github.io/%E5%9F%BA%E7%A1%80%E6%8A%80%E8%83%BD/shell%E4%B8%8B%E8%BD%BD%E5%91%BD%E4%BB%A4</guid>
    <description>curl curl -f -s -m 1 -o - &quot;$url&quot; -f：如果请求失败（例如HTTP状态码不是2xx），则curl会返回非零退出码，类似于wget的默认行为。 -s：静默模式，禁止显示进度和其他信息。 -m 1：设置超时时间为1秒。如果下载超过1秒仍未完成，curl将退出并认为下载失败。 -o -：将下载的内容写入标准输出（stdout）而不是保存到文件中。 curl -f -s -m 3 -z &quot;$url&quot; -o input_file &quot;$url&quot; -f：如果请求失败（例如HTTP状态码不是2xx），则curl会返回非零退出码，类似于wget的默认行为。 -s：静默模式，禁止显示进度和其他信息。 -m 3：设置超时时间为3秒。如果下载超过3秒仍未完成，curl将退出并认为下载失败。 -z &quot;$update_url&quot;：指定一个时间戳，表示只下载比该时间戳更新的文件。这对应wget命令中的-N选项。 -o output_file：将下载的内容保存到指定的文件中。 wget wget -t 1 -T 1 -w 1 -q -O - &quot;$url&quot; -t 1：设置最大尝试次数为1次。如果下载失败，wget 不会进行重试。 -T 1：设置超时时间为1秒。如果下载超过1秒仍未完成，wget 将退出并认为下载失败。 -w 1：设置每个尝试之间的等待时间为1秒。这样可以在尝试下载之间增加一些延迟，以降低对服务器的负载。 -q：静默模式，不显示下载进度和其他信息。 -O -：将下载的内容写入标准输出（stdout）而不是保存到文件中。 .</description>
    <pubDate>Mon, 27 May 2024 09:17:20 GMT</pubDate>
  </item><item>
    <title>vue</title>
    <link>https://chyuhung.github.io/%E5%9F%BA%E7%A1%80%E6%8A%80%E8%83%BD/vue</link>
    <guid>https://chyuhung.github.io/%E5%9F%BA%E7%A1%80%E6%8A%80%E8%83%BD/vue</guid>
    <description>安装nodejs 下载地址 Node.js 中文网 (nodejs.com.cn) nodejs安装步骤 Installation · nodejs/help Wiki (github.com) linux安装nodejs参考命令 [root@ctl01 tmp]# tar -xf node-v18.</description>
    <pubDate>Mon, 27 May 2024 09:17:20 GMT</pubDate>
  </item><item>
    <title>基础技能</title>
    <link>https://chyuhung.github.io/%E5%9F%BA%E7%A1%80%E6%8A%80%E8%83%BD/%E5%9F%BA%E7%A1%80%E6%8A%80%E8%83%BD</link>
    <guid>https://chyuhung.github.io/%E5%9F%BA%E7%A1%80%E6%8A%80%E8%83%BD/%E5%9F%BA%E7%A1%80%E6%8A%80%E8%83%BD</guid>
    <description> 基础技能 操作系统（如 Linux、Unix、Windows）的基本原理和命令行操作 网络协议和网络基础知识 编程基础（如 Python、Shell、Perl） .</description>
    <pubDate>Mon, 27 May 2024 09:17:20 GMT</pubDate>
  </item><item>
    <title>服务器raid配置</title>
    <link>https://chyuhung.github.io/%E5%9F%BA%E7%A1%80%E6%8A%80%E8%83%BD/%E6%9C%8D%E5%8A%A1%E5%99%A8raid%E9%85%8D%E7%BD%AE</link>
    <guid>https://chyuhung.github.io/%E5%9F%BA%E7%A1%80%E6%8A%80%E8%83%BD/%E6%9C%8D%E5%8A%A1%E5%99%A8raid%E9%85%8D%E7%BD%AE</guid>
    <description>磁盘状态描述 UGood（Unconfigured Good，未配置正常）：硬盘状态正常，但还未划分给任何逻辑卷 UBad（Unconfigured Bad，未配置异常）：UGood状态的硬盘出现无法恢复的错误 Onln（Online，在线）：已经设置为某个虚拟硬盘的成员盘，并且处于在线正常可用状态 Offln（Offline，离线）：某个虚拟硬盘的成员盘离线 Missing：Online状态的硬盘脱离RAID组的状态 Rbld（Rebuild，重建）：硬盘正在重建数据 Raid配置工具 MegaCli 基本知识 $ MegaCli -PDList -aALL Adapter #0 #阵列卡号,适配器编号 Enclosure Device ID: 32 #raid卡的ID号 Slot Number: 0 #物理磁盘的slot号,磁盘位置 StorCli 基本知识 c：Controller，控制器，也就是阵列卡 e：Enclosure，附件，一般来讲也就是硬盘背板“硬盘笼” s：Slot，物理硬盘槽位 v：Virtual Drive，虚拟硬盘，也就是逻辑卷 d：Disk Group，硬盘组 f：Foreign configuration file，外部阵列配置 常用命令 命令查看 RAID 控制器信息 storcli /c0 show raid6配置示例，将slot0-9配置为raid6 .</description>
    <pubDate>Mon, 27 May 2024 09:17:20 GMT</pubDate>
  </item><item>
    <title>ssh免密登录</title>
    <link>https://chyuhung.github.io/%E5%AE%89%E5%85%A8%E5%92%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/ssh%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95</link>
    <guid>https://chyuhung.github.io/%E5%AE%89%E5%85%A8%E5%92%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/ssh%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95</guid>
    <description>示例 A为本地主机，BC为远程服务器 使用ssh-keygen生成密钥对 ssh-keygen 拷贝生成的公钥到远程服务器BC，即可在本地主机免密登录远程服务器BC ssh-copy-id -i ~/.ssh/xxx.pub user@server 示例 [root@ctl01 ~]# ssh-copy-id -i .</description>
    <pubDate>Mon, 27 May 2024 09:17:20 GMT</pubDate>
  </item><item>
    <title>公钥与私钥</title>
    <link>https://chyuhung.github.io/%E5%AE%89%E5%85%A8%E5%92%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/%E5%85%AC%E9%92%A5%E4%B8%8E%E7%A7%81%E9%92%A5</link>
    <guid>https://chyuhung.github.io/%E5%AE%89%E5%85%A8%E5%92%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/%E5%85%AC%E9%92%A5%E4%B8%8E%E7%A7%81%E9%92%A5</guid>
    <description>散列算法 散列算法，也叫做哈希函数，有时候也叫做摘要算法，常用的算法有：MD5 SHA1 MD5 MD5 不是一种加密算法，是一种摘要算法，无论多长的输入，MD5 都会输出长度为 128bits 的一个串 SHA1 SHA1 算法也是一个摘要算法， SHA1 比 MD5 更加安全，对于长度小于 2^64 位的消息，SHA1 会产生一个 160 位的消息摘要 摘要算法有摘要特性和不可逆特性，一般用于检查文件的完整性和数据签名的场景 加密算法 对称加密 加、解密使用的是同一串秘钥，只有一个秘钥作为私钥 常用算法：DES、3DES、Blowfish、IDEA、RC4、RC5、RC6和AES 非对称加密 加、解密使用不同秘钥，通常一对私钥与公钥，公钥加密，私钥解密，亦可私钥加密公钥解密），通常加密指代前者，后者叫做“签名” 常用算法：RSA、ECC（移动设备用）、Diffie-Hellman、El Gamal、DSA（数字签名用） ssh免密登录 编码算法 Base64 编码算法，将任意二进制编码成文本.</description>
    <pubDate>Mon, 27 May 2024 09:17:20 GMT</pubDate>
  </item><item>
    <title>安全和权限管理</title>
    <link>https://chyuhung.github.io/%E5%AE%89%E5%85%A8%E5%92%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/%E5%AE%89%E5%85%A8%E5%92%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86</link>
    <guid>https://chyuhung.github.io/%E5%AE%89%E5%85%A8%E5%92%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/%E5%AE%89%E5%85%A8%E5%92%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86</guid>
    <description> 安全和权限管理 系统安全和漏洞管理 访问控制和权限管理（如 LDAP、RBAC） 防火墙和网络安全配置 .</description>
    <pubDate>Mon, 27 May 2024 09:17:20 GMT</pubDate>
  </item>
    </channel>
  </rss>