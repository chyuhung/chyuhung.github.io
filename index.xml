<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
      <title>🪴 十二万光年</title>
      <link>https://chyuhung.github.io</link>
      <description>最近的10条笔记 on 🪴 十二万光年</description>
      <generator>Quartz -- quartz.jzhao.xyz</generator>
      <item>
    <title>故障排除和性能优化</title>
    <link>https://chyuhung.github.io/%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4%E5%92%8C%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4%E5%92%8C%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96</link>
    <guid>https://chyuhung.github.io/%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4%E5%92%8C%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4%E5%92%8C%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96</guid>
    <description> 故障排除和性能优化 系统故障排查和调优 性能监测和性能优化技术 容量规划和资源管理 .</description>
    <pubDate>Wed, 15 May 2024 03:37:51 GMT</pubDate>
  </item><item>
    <title>鸿蒙OS系统优化</title>
    <link>https://chyuhung.github.io/%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4%E5%92%8C%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/%E9%B8%BF%E8%92%99OS%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%96</link>
    <guid>https://chyuhung.github.io/%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4%E5%92%8C%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/%E9%B8%BF%E8%92%99OS%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%96</guid>
    <description>使用ADB工具，将手机开启调试模式，卸载或禁用系统应用和组件，提升手机运行效率 执行前注意：请务必关闭系统“纯净模式” 前置条件 1、进入设置 → 关于手机，连击 5 次版本号，打开开发者模式 2、进入设置 → 系统和更新 → 开发人员选项，勾选USB 调试和“仅充电”模式下允许 ADB 调试 3、连接手机，选择仅充电，弹出提示框后，勾选允许该电脑通过 USB 调试设备并点击允许按钮 4、打开设置 → 系统和更新 → 纯净模式，选择“退出”并确认，进而关闭“纯净模式”，否则之后会无法安装软件 预置应用 .</description>
    <pubDate>Wed, 15 May 2024 03:37:51 GMT</pubDate>
  </item><item>
    <title>文档和沟通能力</title>
    <link>https://chyuhung.github.io/%E6%96%87%E6%A1%A3%E5%92%8C%E6%B2%9F%E9%80%9A%E8%83%BD%E5%8A%9B/%E6%96%87%E6%A1%A3%E5%92%8C%E6%B2%9F%E9%80%9A%E8%83%BD%E5%8A%9B</link>
    <guid>https://chyuhung.github.io/%E6%96%87%E6%A1%A3%E5%92%8C%E6%B2%9F%E9%80%9A%E8%83%BD%E5%8A%9B/%E6%96%87%E6%A1%A3%E5%92%8C%E6%B2%9F%E9%80%9A%E8%83%BD%E5%8A%9B</guid>
    <description> 文档和沟通能力 技术文档编写和维护 团队协作和沟通能力 问题解决和故障处理技巧 .</description>
    <pubDate>Wed, 15 May 2024 03:37:51 GMT</pubDate>
  </item><item>
    <title>监控和日志管理</title>
    <link>https://chyuhung.github.io/%E7%9B%91%E6%8E%A7%E5%92%8C%E6%97%A5%E5%BF%97%E7%AE%A1%E7%90%86/%E7%9B%91%E6%8E%A7%E5%92%8C%E6%97%A5%E5%BF%97%E7%AE%A1%E7%90%86</link>
    <guid>https://chyuhung.github.io/%E7%9B%91%E6%8E%A7%E5%92%8C%E6%97%A5%E5%BF%97%E7%AE%A1%E7%90%86/%E7%9B%91%E6%8E%A7%E5%92%8C%E6%97%A5%E5%BF%97%E7%AE%A1%E7%90%86</guid>
    <description> 监控和日志管理 监控系统的搭建和配置（如 Zabbix、Prometheus） 日志管理和分析工具（如 ELK Stack、Splunk） .</description>
    <pubDate>Wed, 15 May 2024 03:37:51 GMT</pubDate>
  </item><item>
    <title>ceph</title>
    <link>https://chyuhung.github.io/%E7%BD%91%E7%BB%9C%E5%92%8C%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86/ceph</link>
    <guid>https://chyuhung.github.io/%E7%BD%91%E7%BB%9C%E5%92%8C%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86/ceph</guid>
    <description>查看osd ceph osd tree .</description>
    <pubDate>Wed, 15 May 2024 03:37:51 GMT</pubDate>
  </item><item>
    <title>keepalived</title>
    <link>https://chyuhung.github.io/%E7%BD%91%E7%BB%9C%E5%92%8C%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86/keepalived</link>
    <guid>https://chyuhung.github.io/%E7%BD%91%E7%BB%9C%E5%92%8C%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86/keepalived</guid>
    <description>Keepalived是一个用于实现高可用性和负载均衡的软件，常用于配置主备服务器或虚拟 IP 地址的故障切换 常规配置 global_defs global_defs包含全局定义的配置项 router_id：定义 Keepalived 实例的唯一标识符 notification_email：定义在故障切换或状态变化时接收通知的电子邮件地址 notification_email_from：定义发送通知的电子邮件地址 smtp_server：指定用于发送电子邮件通知的 SMTP 服务器的地址 smtp_connect_timeout：定义连接到 SMTP 服务器的超时时间 router_id 和 notification_email 是全局定义的必需配置项，而其他配置项是可选的，根据需要进行配置 vrrp_instance vrrp_instance定义一个 VRRP（Virtual Router Redundancy Protocol）实例，用于配置主备服务器或虚拟 IP 地址的故障切换 state：指定服务器的状态，可以是 MASTER、BACKUP 或 FAULT interface：指定用于 VRRP 实例的网络接口 virtual_router_id：定义 VRRP 路由器的唯一标识符 priority：指定服务器的优先级，用于选举 MASTER 服务器 advert_int：定义 VRRP 广告间隔，即发送 VRRP 通告的时间间隔 authentication：指定 VRRP 通信的认证密码 virtual_ipaddress：定义虚拟 IP 地址，当服务器处于 MASTER 状态时，该地址将被分配给服务器 virtual_server virtual_server用于配置负载均衡的虚拟服务器 delay_loop：定义检查服务器健康状态的时间间隔 lb_algo：定义负载均衡算法，例如 rr（轮询）或 wrr（加权轮询） lb_kind：定义负载均衡类型，例如 NAT（网络地址转换）或 DR（直接路由） real_server：定义真实服务器的 IP 地址和端口 配置示例 配置主服务器（MASTER）和备份服务器（BACKUP）的 Keepalived 实例，当主服务器无法正常工作时，备份服务器将接管虚拟 IP 地址并成为活动服务器 Master（主服务器）配置文件 ! 全局定义 global_defs { router_id keepalived_example } ! VRRP 实例 - 主服务器 vrrp_instance VI_1 { state MASTER interface ens3 virtual_router_id 51 priority 100 advert_int 1 authentication { auth_type PASS auth_pass example_password } virtual_ipaddress { 10.</description>
    <pubDate>Wed, 15 May 2024 03:37:51 GMT</pubDate>
  </item><item>
    <title>mysql</title>
    <link>https://chyuhung.github.io/%E7%BD%91%E7%BB%9C%E5%92%8C%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86/mysql</link>
    <guid>https://chyuhung.github.io/%E7%BD%91%E7%BB%9C%E5%92%8C%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86/mysql</guid>
    <description></description>
    <pubDate>Wed, 15 May 2024 03:37:51 GMT</pubDate>
  </item><item>
    <title>pgsql</title>
    <link>https://chyuhung.github.io/%E7%BD%91%E7%BB%9C%E5%92%8C%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86/pgsql</link>
    <guid>https://chyuhung.github.io/%E7%BD%91%E7%BB%9C%E5%92%8C%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86/pgsql</guid>
    <description></description>
    <pubDate>Wed, 15 May 2024 03:37:51 GMT</pubDate>
  </item><item>
    <title>网络和存储管理</title>
    <link>https://chyuhung.github.io/%E7%BD%91%E7%BB%9C%E5%92%8C%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86/%E7%BD%91%E7%BB%9C%E5%92%8C%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86</link>
    <guid>https://chyuhung.github.io/%E7%BD%91%E7%BB%9C%E5%92%8C%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86/%E7%BD%91%E7%BB%9C%E5%92%8C%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86</guid>
    <description> 网络和存储管理 网络设备的配置和管理 存储管理和数据备份策略 数据库管理（如 MySQL、PostgreSQL、MongoDB） .</description>
    <pubDate>Wed, 15 May 2024 03:37:51 GMT</pubDate>
  </item><item>
    <title>jinja2</title>
    <link>https://chyuhung.github.io/%E8%87%AA%E5%8A%A8%E5%8C%96%E5%92%8C%E7%BC%96%E7%A8%8B/Jinja2</link>
    <guid>https://chyuhung.github.io/%E8%87%AA%E5%8A%A8%E5%8C%96%E5%92%8C%E7%BC%96%E7%A8%8B/Jinja2</guid>
    <description>特点 语法简洁：Jinja2使用简洁而易读的语法，使用大括号{{ }}表示变量插值，使用{% %}表示控制流语句（如条件和循环），以及使用{# #}表示注释 变量插值：Jinja2允许在模板中插入变量的值。可以将变量直接插入到模板中，或者使用过滤器对变量进行处理和格式化 控制流语句：Jinja2支持条件语句（如if、else、elif）和循环语句（如for、while）。这些语句允许根据条件或迭代集合来控制模板的输出 模板继承：Jinja2支持模板继承，可以定义一个基础模板（父模板），然后在派生模板（子模板）中根据需要重写和扩展父模板的内容 过滤器和函数：Jinja2提供了多个内置过滤器和函数，用于对变量进行处理和转换。可以使用这些过滤器和函数对变量进行格式化、截取、排序等操作 宏（Macro）：宏是一种用于定义可重用代码块的机制。可以使用宏来定义一段代码，并在模板的其他地方多次调用该代码块 自定义扩展：Jinja2允许开发者自定义扩展，以增加额外的功能和语法。可以编写自定义过滤器、函数、测试等，以满足特定的需求 .</description>
    <pubDate>Wed, 15 May 2024 03:37:51 GMT</pubDate>
  </item>
    </channel>
  </rss>